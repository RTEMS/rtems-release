# RTEMS Tools Project (http://www.rtems.org/)
# Copyright 2015,2016,2019,2020 Chris Johns (chrisj@rtems.org)
# All rights reserved.
#
# This file is part of the RTEMS Tools package in 'rtems-tools'.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
# this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

#
# This script starts the packaging.
#

#
# Keep the top where we start.
#
top=${PWD}

#
# The package, version and revision amd maybe a worker script.
#
if [ $# -lt 4 -o $# -gt 5 ]; then
    echo "error: must be 4 or 5 arguments, the package, version," \
	 "release, release URL and optionally a worker script."
 exit 1
fi
package=$1
version=$2
revision=$3
release_url=$4

. ${release_top}/rtems-release-package-lists
. ${release_top}/rtems-release-version

if [ $# -eq 5 ]; then
 if [ ! -x ${top}/$5 ]; then
  echo "error: cannot find the worker: $4"
  exit 1
 fi
 worker=${top}/$5
else
 worker=
fi

revision_no=$(echo ${revision} | sed -e 's/\-.*$//' -e 's/\..*//')
release=${version}.${revision}
prefix=${package}-${release}

if [ -z "${rtems_git_repo}" ]; then
 rtems_git_repo=yes
fi

if [ ${rtems_git_repo} = yes ]; then
 git_remote=git://git.rtems.org/${package}.git
 git_local=${package}-release-${release}.git
 git_submodules_excludes="freebsd-org"
fi

workspace=ws-${package}

. ${release_top}/rtems-release-version

echo "] ${title}, v${release}"
echo "] Package: ${package}"
echo "] Release: ${release}"
if [ ${rtems_git_repo} = yes ]; then
 echo "] Repo   : ${git_remote}"
fi

if [ ! -e ${release} ]; then
 mkdir ${release}
else
 if [ ! -d ${release} ]; then
  echo "error: ${release} exists and is not a directory."
  exit 1
 fi
fi

#
# Work in a package specific directory in the release directory.
#
cd ${release}
rm -rf ${workspace}
mkdir ${workspace}
cd ${workspace}

#
# Function to map package and version to branch names.
#
rtems_map_branch()
{
 # $1=package
 # $2=version
 case "$1" in
  rtems-libbsd)
   branch="$2-freebsd-${rtems_libbsd_release}"
   ;;
  *)
   branch="$2"
   ;;
 esac
 # Get the remote branch. If the release branch is not found use release's master.
 remote_branch=$(git branch --remote | grep "${branch}$" | tr -d "[:space:]")
 if [ -z "${remote_branch}" ]; then
  remote_branch="master"
 fi
 echo ${remote_branch}
}
